{% extends 'base.html.twig' %}

{% block title  %}
    {{ spot.name }}
{% endblock %}


{% block headerElements %}
    <script src="{{ absolute_url(asset('js/jquery-3.4.1.slim.min.js')) }}"></script>
    <script type="text/javascript" src="https://maps.google.com/maps/api/js?key=AIzaSyCTIn22N0OJ6j4PjvTkqi8ROqN_XhKZUyQ"></script>
    <script src="{{ asset('js/leaflet-google-correct-v1.js') }}"></script>

    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.0/mapbox-gl.js'></script>
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.0/mapbox-gl.css' rel='stylesheet' />

    <style>
        #spot_map {
            width: 100%; /* important! if you need full width display */
            height: 400px;
            margin: 0;
            border-radius: 5px;
        }
    </style>
    {{ parent() }}
{% endblock %}

{% block stylesheets %}
    <!-- Import Leaflet CSS Style Sheet -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" />
    {{ parent() }}
{% endblock %}


{% block headScript %}
    <!-- Import Leaflet JS Library -->
    <script type="text/javascript" src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js"></script>
    {{ parent() }}
{% endblock %}



{% block body %}
    <div class="text-center">

            <div class="row">

                <div class="col-sm-12 centered align-middle">
                    <h1>{{ spot.name }}</h1>
                    <div class="d-none d-sm-block">{{ spot.shortDescription|raw }}</div>
                </div>

            </div>
    </div>

    <div class="container">

    <!-- Description & Carte -->
        <h3 class="hr"><a href="#spotDesc" data-toggle="collapse" class="titreCollapse">Description du spot</a></h3>
        <div class="row">
            <div class="col-sm-6 center-block">
                <div id="spotDesc">{{ spot.description|raw }}</div>
            </div>
            <div class="col-sm-6 center-block">
                <div id="spot_map"></div>
            </div>
        </div>

    <!-- Vent -->
        <h3 class="hr"><a href="#descWind" data-toggle="collapse" class="titreCollapse">Info sur l'orientation du vent</a></h3>
        <div class="row collapse show" id="descWind">
            <div class="col-sm-3 centered">
                {% from "windRosace/rosaceWind.html.twig" import displayRosace %}
                {{ displayRosace("200px","200px") }}

                <script>
                    // **************************************
                    // ** Gestion de l'orientation du vent **
                    // **************************************
                    var tabOrientationState = new Array(); // Array with orientation => state, used for rosace wind

                    getOrientationDataFromSpot();

                    // Récupére les données de l'objet spot et les pousse dans la rosace

                    function getOrientationDataFromSpot() {
                        // Parcour la liste des WindOrientation
                        {% for windOrientation in spot.windOrientation %}
                        tabOrientationState["{{ windOrientation.orientation }}"]="{{ windOrientation.state?windOrientation.state:"?" }}";
                        {% endfor %}

                        svgLoad(tabOrientationState, true);
                    }
                </script>
            </div>
            <div class="col-sm-9">
                <p>
                    <span class="badge badge-primary">condition idéal</span>
                    <span class="badge badge-success">bonne condition</span>
                    <span class="badge badge-warning">navigable, mais attention</span>
                    <span class="badge badge-danger">non navigable</span>
                </p>
                {{ spot.descOrientationVent|raw }}
            </div>
        </div>

    <!-- Marée -->
    {% if spot.URLMaree|default is not empty %}
        <h3 class="hr"><a href="#descMaree" data-toggle="collapse" class="titreCollapse">Info sur les marées</a></h3>
        <div class="row collapse show" id="descMaree">
            <div class="col-sm-9">
                {% if (spot.uRLMaree is defined) and (spot.uRLMaree is not null) %}
                    <div>
                        <a href="{{ spot.uRLMaree }}" target="_blank">Site pour la prévision des marées</a><br>
                        Les contraintes selon la hauteur de l'eau:
                        <ul>
                        {% for mareeRestriction in spot.mareeRestriction %}
                            <li>De {{ mareeRestriction.hauteurMin }} m à {{ mareeRestriction.hauteurMax }} m,

                            {% if mareeRestriction.state =="top" %}
                                <span class="badge badge-primary">condition idéal.</span>
                             {% elseif mareeRestriction.state =="OK" %}
                                 <span class="badge badge-success">bonne condition.</span>
                             {% elseif mareeRestriction.state =="warn" %}
                                 <span class="badge badge-warning">navigable, mais attention.</span>
                             {% elseif mareeRestriction.state =="KO" %}
                                 <span class="badge badge-danger">non navigable.</span>
                            {% endif %}

                            </li>
                        {% endfor %}
                        </ul>
                    </div>
                {% endif %}
                {{ spot.descMaree|raw }}
            </div>
            <div class="col-sm-3 centered">
                {% if (spot.uRLMaree is defined) and (spot.uRLMaree is not null) %}
                    <img src="{{ asset(urlMareeImage) }}" width="200px">
                {% else %}
                    <span class="text-info">Aucune contrainte de marée</span>
                {% endif %}
            </div>
        </div>
    {% endif %}

    <!-- Autre -->
        <h3 class="hr"><a href="#descAutre" data-toggle="collapse" class="titreCollapse">Info divers sur {{ spot.name }}</a></h3>
        <div class="row collapse show" id="descAutre">

            <!-- Vagues -->
            {% if spot.descWave|default is not empty %}
            <div class="col-sm-4">
                <span class="sous-titre-spot">Vagues</span>
                {{ spot.descWave|raw }}
            </div>
            {% endif %}

            <!-- Foil -->
            {% if spot.isFoil %}
                <div class="col-sm-4">
                    <span class="sous-titre-spot">Foil</span>
                    {{ spot.descFoil|raw }}
                </div>
            {% endif %}

            <!-- Eté -->
            <div class="col-sm-4">
                <span class="sous-titre-spot">L'été</span>
            {% if spot.isContraintEte %}
                {{ spot.descContraintEte|raw }}
            {% else %}
                A priori aucune contrainte l'été sur ce spot.
            {% endif %}
            </div>
        </div>

    <!-- La route -->
        <h3 class="hr"><a href="#descRoute" data-toggle="collapse" class="titreCollapse">Pour y aller</a></h3>
        <div class="row collapse show" id="descRoute">
            <div class="col-sm-12">
                {{ spot.descRoute|raw }}<br/>
                <br/>
                Distance de Paris: {{ spot.kmFromParis }}km (dont {{ spot.kmAutorouteFromParis }}km d'autoroute)<br/>
                Temps de Paris: {{ spot.timeFromParis // 60 }}h{{ spot.timeFromParis % 60 }}<br/>
                Coordonnées: ({{ spot.gpsLat }},{{ spot.gpsLong }})
            </div>
        </div>

    <!-- Liens -->
        <h3 class="hr"><a href="#descLink" data-toggle="collapse" class="titreCollapse">Sites internet sur le spot</a></h3>
        <div class="row collapse show" id="descLink">
            <div class="col-sm-5">
                <span class="sous-titre-spot">Prévisions météo</span>
                <ul class="liste-optimise">
                    {% if spot.urlWindFinder|default is not empty %}
                    <li><a href="{{ spot.urlWindFinder }}" target="_blank">Windfinder</a> </li>
                    {% endif %}
                    {% if spot.uRLWindguru|default is not empty %}
                    <li><a href="{{ spot.uRLWindguru }}" target="_blank">Windguru</a> </li>
                    {% endif %}
                    {% if spot.uRLMeteoFrance|default is not empty %}
                    <li><a href="{{ spot.uRLMeteoFrance }}" target="_blank">Meteo France</a> </li>
                    {% endif %}
                    {% if spot.uRLMeteoConsult|default is not empty %}
                    <li><a href="{{ spot.uRLMeteoConsult }}" target="_blank">Meteo Consult</a> </li>
                    {% endif %}
                    {% if spot.uRLMerteo|default is not empty %}
                    <li><a href="{{ spot.uRLMerteo }}" target="_blank">Merteo</a> </li>
                    {% endif %}
                </ul>
            </div>


            {% if spot.webSiteInfos.count > 0 %}
                <div class="col-sm-7">
                    <span class="sous-titre-spot">Sites sur le spot</span>
                    <ul class="liste-optimise">

                        {% if spot.urlWebcam|default is not empty %}
                            <li><a href="{{ spot.urlWebcam }}" target="_blank">Webcam</a> </li>
                        {% endif %}
                        {% if spot.urlBalise|default is not empty %}
                            <li><a href="{{ spot.urlBalise }}" target="_blank">Balise</a> </li>
                        {% endif %}
                        {% if spot.uRLTempWater|default is not empty %}
                            <li><a href="{{ spot.uRLTempWater }}" target="_blank">Temp de l'eau</a> </li>
                        {% endif %}
                        {% for webSite in spot.webSiteInfos %}
                            <li><a href="{{ webSite.url }}" target="_blank">{{ webSite.name }}</a>: {{ webSite.description|raw }} </li>
                        {% endfor %}
                    </ul>
                </div>
            {% endif %}

        </div>

    <!-- Commentaires -->
        <h3 class="hr"><a href="#descComment" data-toggle="collapse" class="titreCollapse">Commentaires</a></h3>
        <div class="row collapse show" id="descComment">

            {% for comment in spot.commentaires %}
                {% if comment.isVisible %}
            <div class="row">
                <div class="col-12">
                    <span class="sous-titre-spot">{{ comment.titre }} : </span>
                    {{ comment.commentaire }}
                </div>
            </div>

                {% else %}
                    {% if app.user %}
            <div class="row">
                <div class="col-11">
                    <span class="sous-titre-spot">{{ comment.titre }}</span>
                    {{ comment.commentaire }}
                </div>
                <div class="col-1">
                    <button class="btn-secondary" onclick="putVisibleComment({{ comment.id }})">Visible</button>
                </div>
            </div>
                    {% endif %}
                {% endif %}
            {% endfor %}

            <div class="row">
                <span class="sous-titre-spot">Nouveau commentaire</span>
                <div class="col-12">
                    <form action="{{ path('spot_add_comment', {'id':spot.id}) }}" method="POST"
                          id="comment_form">
                    <div class="row">
                        <div class="col-4">
                            {{ form_row(form.titre) }}
                        </div>
                        <div class="col-4">
                            {{ form_row(form.pseudo) }}
                        </div>

                        <div class="col-4">
                            {{ form_row(form.mail) }}
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            {{ form_row(form.commentaire) }}
                        </div>
                    </div>

                    {{ form_end(form) }}
                </div>
            </div>

        </div>

    </div> <!-- container -->

    <script>
        function putVisibleComment(idComment) {
            var urlPath = '{{ path('spot_set_visible_comment', {'id':'__id__'}) }}';
            urlPath = urlPath.replace('__id__', idComment);
                $.ajax({
                    url : urlPath,
                    type : 'POST',
                    data : 'id=' + idComment
                });
        }

        var mymap = L.map('spot_map', {
            center: [{{ spot.gpsLat }}, {{ spot.gpsLong }}], /* set GPS Coordinates */
            zoom: 13, /* define the zoom level */
            zoomControl: true, /* false = no zoom control buttons displayed */
            scrollWheelZoom: false /* false = scrolling zoom on the map is locked */
        });

        var osmLayer = L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibGFwb2l6IiwiYSI6ImNrM3VjMmkzNzBiMmYzbnBzZmQzdG1pbHYifQ.JI_lvA9ARHVS7QbIsNUrOQ', {
            maxZoom: 20, /* zoom limit of the map */
            /*attribution: 'Données &copy; Contributeurs <a href="http://openstreetmap.org">OpenStreetMap</a> + ' +
                '<a href="http://mapbox.com">Mapbox</a> | ' +
                'Lapoiz', /* set the map's caption */
            id: 'mapbox.satellite' /* mapbox.light / dark / streets / outdoors / satellite */
        }).addTo(mymap);

        //L.marker([{{ spot.gpsLat }}, {{ spot.gpsLong }}]).addTo(mymap); /* set your location's GPS Coordinates : [LAT,LON] */


        var geojsonMarkerOptions = {
            radius: 8,
            fillColor: "#fff",
            color: "#000",
            weight: 1,
            opacity: 0.5,
            fillOpacity: 0.8
        };

        $.getJSON("{{ asset(urlGeoJsonSpot) }}",function(data){
            // add GeoJSON layer to the map once the file is loaded
            L.geoJson(data, {
                pointToLayer: function (feature, latlng) {
                    return L.circleMarker(latlng, geojsonMarkerOptions).bindTooltip(feature.properties.nom, {
                        permanent: true, opacity: 0.7 ,direction: "center", className: "zoneGeoMap"}).openTooltip();
                },
                style: function (feature) {
                    if (feature.properties.type=='KiteZone') {
                        return {color: 'green'};
                    } else if (feature.properties.type=='Danger') {
                        return {color: 'red'};
                    } else if (feature.properties.type=='chemin') {
                        return {color: 'green'};
                    } else if (feature.properties.type=='marqueurZone') {
                        return {};
                    }
                },
                onEachFeature: function (feature, layer) {
                    if (feature.properties.type != 'marqueurZone'){
                        layer.bindPopup(feature.properties.popupMsg);
                    }
                }
            }).addTo(mymap)
        });


        // Google Maps

        var ggRoadmap = new L.Google('ROADMAP');
        var ggSatellite = new L.Google('');
        var ggTerrain = new L.Google('TERRAIN');
        var ggHybrid = new L.Google('HYBRID');


        mymap.addControl(new L.Control.Layers( {
                //'IGN': ignLayer,
                'OpenStreetMap': osmLayer,
                'Google Roadmap' : ggRoadmap,
                'Google Satellite': ggSatellite,
                'Google Terrain': ggTerrain,
                'Google Hybrid' : ggHybrid
            }, {})
        );

    </script>

{% endblock %}